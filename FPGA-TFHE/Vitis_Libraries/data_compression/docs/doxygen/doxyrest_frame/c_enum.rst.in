%{
--------------------------------------------------------------------------------
--
--  This file is part of the Doxyrest toolkit.
--
--  Doxyrest is distributed under the MIT license.
--  For details see accompanying license.txt file,
--  the public copy of which is also available at:
--  http://tibbo.com/downloads/archive/doxyrest/license.txt
--
--------------------------------------------------------------------------------

local argArray = table.pack (...)
local enum = argArray [1]

local enumKind = getItemKindString (enum, "enum")
local enumStats = prepareEnum (enum)
local prevGetItemName = getItemName

getItemName = getItemSimpleName

if g_globalDefFile then
}
.. include:: $g_globalDefFile
%{
end -- if
}
.. index:: pair: enum; $(getItemQualifiedName (enum))
.. _doxid-$(enum.m_id):
.. _cid-$(getItemCid (enum)):

$(getTitle (enumKind .. " " .. getItemQualifiedName (enum), "="))

$(getItemImportString (enum))

%{
local hasDetails =
	enumStats.m_hasDocumentedEnumValues or
	enumStats.m_hasBriefDocumentation and enumStats.m_hasDetailedDocumentation

if hasDetails then
}
Overview
~~~~~~~~

$(getItemBriefDocumentation (enum, "details-"))

%{
else
}
$(getItemDetailedDocumentation (enum))

%{
end -- if

emit (getEnumOverviewRefTargetString (enum))
}
.. ref-code-block:: $g_language
	:class: overview-code-block

	// enum values

%{
for i = 1, #enum.m_enumValueArray do
	local item = enum.m_enumValueArray [i]
}
	$(getItemNameForOverview (item)) $(getLinkedTextString (item.m_initializer, true))
%{
end -- for

emit ("\n")

if hasDetails then
}
.. _details-doxid-$(enum.m_id):

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

$(getItemDetailedDocumentation (enum))

%{
end -- if

if enumStats.m_hasDocumentedEnumValues then
}
Enum Values
-----------

%{
	for i = 1, #enum.m_enumValueArray do
		local item = enum.m_enumValueArray [i]
		if item.m_hasDocumentation then
			emit (getItemRefTargetString (item))
}
.. ref-code-block:: $g_language
	:class: title-code-block

	$(item.m_name)
%{
		if item.m_isSubGroupHead then
			for j = 1, #item.m_subGroupSlaveArray do
				slaveItem = item.m_subGroupSlaveArray [j]
}
	$(slaveItem.m_name)
%{
			end -- for
		end -- if
}

$(getItemDetailedDocumentation (item))

%{
		end -- if
	end -- for
end -- if

getItemName = prevGetItemName
}
